#
# nano simulation v0.01 beta
#
# by: cupucupu <cupu.cupuh@yahoo.co.id>
#
# feb 2011
#

def nanoMainWindow():
    global nanoWindowBody, nanoDefMenu, nanoGetParam
    appuifw.app.title = u"nano 0.01"
    nanoDefMenu = [(u"Save...",nanoSave),
                   (u"Help",nanoHelp),
                   (u"About",nanoAbout),
                   (u"Quit",nanoReturn)]
    nanoWindowBody = appuifw.Text()
    appuifw.app.body = nanoWindowBody
    nanoReadParam = open("%s\\var\\run\\cmd.run"%ROOT,'r')
    nanoGetParam = nanoReadParam.read().split("^")
    nanoReadParam.close()
    nanoGetParam.pop(0)
    nanoGetParam.pop(len(nanoGetParam)-1)
    if len(nanoGetParam) == 1:
        nanoWindowEdit()
    else:
        if nanoGetParam[1].startswith("'") or nanoGetParam[1].startswith('"'):
            nanoMerge=''
            nanoLoop=1
            nanoLen=len(nanoGetParam)-1
            while nanoLoop <= nanoLen:
                if nanoGetParam[nanoLoop].startswith('"') or nanoGetParam[nanoLoop].startswith("'"):
                    nanoMerge+="%s "%nanoGetParam[nanoLoop][1:]
                elif nanoGetParam[nanoLoop].endswith('"') or nanoGetParam[nanoLoop].endswith("'"):
                    nanoMerge+="%s"%nanoGetParam[nanoLoop][:-1]
                    break
                else:
                    nanoMerge+="%s "%nanoGetParam[nanoLoop]
                nanoLoop+=1
            if os.path.exists("%s%s"%(os.getcwd(),nanoMerge)) and not os.path.isdir("%s%s"%(os.getcwd(),nanoMerge)):
                nanoTarget = open("%s%s"%(os.getcwd(),nanoMerge),"r")
                nanoTRead = nanoTarget.read()
                nanoTarget.close()
                nanoWindowBody.add(u"%s"%nanoTRead)
                nanoWindowBody.set_pos(0)
                nanoGetParam = nanoMerge
                nanoWindowEdit()
            elif os.path.exists("%s%s"%(os.getcwd(),nanoMerge)) and os.path.isdir("%s%s"%(os.getcwd(),nanoMerge)):
                appuifw.app.body=LimitPrint
                LimitPrint.add(u"nano: %s: Is a directory"%nanoMerge)
                LimitConsole()
            else:
                nanoGetParam = nanoMerge
                nanoWindowEdit()
        elif os.path.exists("%s%s"%(os.getcwd(),nanoGetParam[1])) and not os.path.isdir('%s%s'%(os.getcwd(),nanoGetParam[1])):
            nanoTarget = open("%s%s"%(os.getcwd(),nanoGetParam[1]),'r')
            nanoTRead = nanoTarget.read()
            nanoTarget.close()
            nanoWindowBody.add(u"%s"%nanoTRead)
            nanoWindowBody.set_pos(0)
            nanoGetParam = u"%s"%nanoGetParam[1]
            nanoWindowEdit()
        elif os.path.exists("%s%s"%(os.getcwd(),nanoGetParam[1])) and os.path.isdir("%s%s"%(os.getcwd(),nanoGetParam[1])):
            appuifw.app.body = LimitPrint
            LimitPrint.add(u"nano: %s: Is a directory"%nanoGetParam[1])
            LimitConsole()
        else:
            nanoGetParam = "%s"%nanoGetParam[1]
            nanoWindowEdit()
        
def nanoWindowEdit():
    if len(nanoGetParam) == 1:
        appuifw.app.title = u"Untitled"
    else:
        appuifw.app.title = u"%s"%nanoGetParam
    appuifw.app.exit_key_handler = nanoReturn
    appuifw.app.menu = nanoDefMenu
    appuifw.app.body = nanoWindowBody
    
def nanoSave():
    appuifw.app.title = u"Saving..."
    nanoGetBody = appuifw.app.body.get()
    nanoGetBody = nanoGetBody.replace(u"u2029",u"\n")
    if len(nanoGetParam) > 1:
        nanoFile = open(u"%s%s"%(os.getcwd(),nanoGetParam),'wb')
        nanoFile.write(u"%s"%str(nanoGetBody.encode("utf-8")))
        nanoFile.close()
        appuifw.app.body = LimitPrint
        LimitPrint.add(u"File %s saved"%nanoGetParam)
        appuifw.app.exit_key_handler = LimitHalt
        appuifw.app.menu = LimitDefMenu
        LimitConsole()
    else:
        nanoFileName = appuifw.query(u"New file name:","text")
        if nanoFileName and not os.path.exists("%s%s"%(os.getcwd(),nanoFileName)):
            nanoFile = open("%s%s"%(os.getcwd(),nanoFileName),'w')
            nanoFile.write(u"%s"%str(nanoGetBody))
            nanoFile.close()
            appuifw.app.body = LimitPrint
            LimitPrint.add(u"File %s saved"%nanoFileName)
            appuifw.app.exit_key_handler = LimitHalt
            appuifw.app.menu = LimitDefMenu
            LimitConsole()
        elif nanoFileName and os.path.exists("%s%s"%(os.getcwd(),nanoFileName)):
            nanoQR = appuifw.query(u"File %s already exists. Replace ?"%nanoFileName,"query")
            if nanoQR:
                if os.path.isdir("%s%s"%(os.getcwd(),nanoFileName)):
                    appuifw.note(u"nano: %s: Is a directory"%nanoFileName,"error")
                    nanoSave()
                else:
                    os.remove("%s%s"%(os.getcwd(),nanoFileName))
                    nanoFile = open("%s%s"%(os.getcwd(),nanoFileName),'w')
                    nanoFile.write(u"%s"%str(nanoGetBody))
                    nanoFile.close()
                    appuifw.app.body = LimitPrint
                    appuifw.app.exit_key_handler = LimitHalt
                    appuifw.app.menu = LimitDefMenu
                    LimitPrint.add(u"nano: %s: file replaced"%nanoFileName)
                    LimitConsole()
            else:
                nanoSave()
        else:
            appuifw.app.body = LimitPrint
            LimitPrint.add(u"nano: No file saved")
            appuifw.app.exit_key_handler = LimitHalt
            appuifw.app.menu = LimitDefMenu
            LimitConsole()
            
def nanoHelp():
    appuifw.app.title = u"nano Help"
    appuifw.app.exit_key_handler = nanoWindowEdit
    appuifw.app.menu = [(u"Go Back..",nanoWindowEdit)]
    nanoHO = open("%s\\usr\\doc\\nano-0.01\\help-en.txt"%ROOT,"r")
    nanoHR = nanoHO.read()
    nanoHO.close()
    nanoHB = appuifw.Text()
    appuifw.app.body = nanoHB
    nanoHB.add(u"%s"%nanoHR)
    nanoHB.set_pos(0)
    
def nanoAbout():
    appuifw.app.title = u"About nano"
    appuifw.app.exit_key_handler = nanoWindowEdit
    appuifw.app.menu = [(u"Go Back..",nanoWindowEdit)]
    nanoAO = open("%s\\usr\\doc\\nano-0.01\\about-en.txt"%ROOT,"r")
    nanoAR = nanoAO.read()
    nanoAO.close()
    nanoAB = appuifw.Text()
    appuifw.app.body = nanoAB
    nanoAB.add(u"%s"%nanoAR)
    nanoAB.set_pos(0)
    
def nanoReturn():
    appuifw.app.body = LimitPrint
    appuifw.app.exit_key_handler = LimitHalt
    appuifw.app.menu = LimitDefMenu
    LimitPrint.delete(LimitPrint.len()-1,LimitPrint.len())
    LimitConsole()
    
nanoMainWindow()

